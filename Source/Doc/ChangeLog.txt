v 2.0.5

Bug fixes

- System.Reflection.Emit.AssemblyBuilder assemblies are processed properly.
- RegExAttribute - now properly returns valid==true only when whole value is equal to match
- EditableObject serialization issue
- StandardPropertyDescriptor.CheckNull was always returning DBNull.Value if _isNull handler
  was returning null. Now configurable via Configuration.CheckNullReturnIfNull.
- PropertyChangedBuilder was crashing when property was not public
- ObjectBinder.IsNull was serialized to resources

Enhancement

- Ability to specify RegexOptions for RegExAttribute. Regex not being created on every call to IsValid
- Destination attribute works with scalar types.
- DataAccessorBuilder generates getters/setters for abstract properties & indexers.
- Ability to specify globaly whether strings should be trimed when mapping
- Ability to specify whether PropertyChange notification should only be fired when underlying value is changed
  and not when setter is called

v 2.0.4

Bug fixes

- By default, the mapper included const fields into map list (???).
- If enum does not have explicit mapping, data accessor builder 
  does not convert it to underlying type.
- MemberMapper fails to convert an object to its base type.
- BindingListImpl.RemoveSort was not firing ListChange event.
- TypeAccessor.CreateExtendedPropertyDescriptors did not work properly
  with 3rd+ level nested properties.
- Object holder ignored NoInstanceAttribute.
- ValidatorContext caches NullValue.
- EditableObject.RejectChanges/RejectMemberChanges were not firing PropertyChanged event for reverted fields.
- Fixed the generating IsValueType && !IsPrimitive ref/out parameters.

Enhancement

- Operator<T> is extensible now.
- ObjectBinder can now control lifetime (Disposal) of underlying collection.
- DuckTyping (the idea was shamelessly stolen from http://www.codeproject.com/cs/library/nduck.asp)
- ParamNullValue attribute.
- Virtual method DataProviderBase.PrepareCommand to let a data provider modify SQL statement befory query.
- Virtual method CacheAspect.GetCache. Can be used to provide a custom hashtable.

v 2.0.3

Bug fixes

- Race condition in MappingSchema.GetObjectMapper.
- DbManager will not try to close the connection in the finalizer anymore.
- MinValue/MaxValue attributes now determine value type by object property/field instead of test value.
- Fixed obscure case when object is removed from EditableArrayList/BindingListImpl while ItemPropertyChanged 
  delegate is in process of being executed and collection handler was not yet invoked.

Enhancement

- HttpReader SOAP support.
- Convert<T,P> uses type cast operators when available.
- Third party DataProvider registration via appsettings.
- More specification adherent sorting behavior implementation of IBindingList/IBindingListView in BindingListImpl. 
- EditableArrayList (potentially breaking changes) heavily relies on BindingListImpl for IBindingList/IBindingListView 
  and their base interfaces implementation. 
- BindingListImpl is changed to be fully specification adherent binding wrapper for other object lists/collection types.
- 2.0.1 version obsolete methods have been removed.


v 2.0.2

Bug fixes

- Abstract class builder overrode virtual final methods.
- Append records to a log file.
- ObjectBinder's AllowNew, AllowEdit, AllowRemove properties serialization.

Enhancement

- New DataAccessor<T,A> class.
- Direction.ReturnValueAttribute takes the Member parameter in '@fieldName' format.
- New property Object of the InterceptCallInfo class, which is an intercepted object reference.

