package JS.DbManagerTest;

import System.Int32;
import System.Data.*;

import NUnit.Framework.*;

import Rsdn.Framework.Data.*;

public abstract class Test
{
	/** @property */
	public abstract String get_ConfigurationString();

	public String ParamText(String param)
	{
		return "@" + param;
	}

	#region ExecuteNonQuery

	/** @attribute Test()*/
	public void SetCommand_CommandType_Text_ExecuteNonQuery()
	{
		DbManager db = new DbManager(get_ConfigurationString());

		try 
		{
			db.SetCommand(CommandType.Text, "SELECT 1").ExecuteNonQuery();
		}
		finally
		{
			if (db != null) db.Dispose();
		}
	}

	/** @attribute Test()*/
	public void SetCommand_CommandType_TableDirect_ExecuteNonQuery()
	{
		DbManager db = new DbManager(get_ConfigurationString());

		try 
		{
			db.SetCommand(CommandType.TableDirect, "Customers").ExecuteNonQuery();
		}
		finally
		{
			if (db != null) db.Dispose();
		}
	}

	/** @attribute Test()*/
	public void SetCommand_CommandType_StoredProcedure_ExecuteNonQuery()
	{
		DbManager db = new DbManager(get_ConfigurationString());

		try 
		{
			db.SetCommand(CommandType.StoredProcedure, "[Ten Most Expensive Products]").ExecuteNonQuery();
		}
		finally
		{
			if (db != null) db.Dispose();
		}
	}
	#endregion

	#region ExecuteScalar

	/** @attribute Test()*/
	public void ExecuteScalar()
	{
		DbManager db = new DbManager(get_ConfigurationString());

		try
		{
			IDbDataParameter param[] = 
			{
				db.Parameter("@country", "USA")
			};

			int count = (int)(Int32)db
				.SetCommand(
					String.Format(
						"SELECT Count(*) FROM Customers WHERE Country = {0}",
						ParamText("country")),
					param)
				.ExecuteScalar();

			Assert.IsFalse(count == 0);
		}
		finally
		{
			if (db != null) db.Dispose();
		}
	}
	#endregion
}
