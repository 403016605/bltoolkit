//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50215.44
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Toys.Test {
    using System;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("EmployeeDataSet2")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Usage", "CA2240:ImplementISerializableCorrectly")]
    public partial class EmployeeDataSet2 : System.Data.DataSet {
        
        private EmployeesDataTable tableEmployees;
        
        private System.Data.DataRelation relationFK_Employees_Employees;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public EmployeeDataSet2() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        protected EmployeeDataSet2(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Employees"] != null)) {
                    base.Tables.Add(new EmployeesDataTable(ds.Tables["Employees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeesDataTable Employees {
            get {
                return this.tableEmployees;
            }
        }
        
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.ComponentModel.DefaultValueAttribute(true)]
        public new bool EnforceConstraints {
            get {
                return base.EnforceConstraints;
            }
            set {
                base.EnforceConstraints = value;
            }
        }
        
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        public override System.Data.DataSet Clone() {
            EmployeeDataSet2 cln = ((EmployeeDataSet2)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Employees"] != null)) {
                    base.Tables.Add(new EmployeesDataTable(ds.Tables["Employees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.InitVars(true);
        }
        
        internal void InitVars(bool initTable) {
            this.tableEmployees = ((EmployeesDataTable)(base.Tables["Employees"]));
            if ((initTable == true)) {
                if ((this.tableEmployees != null)) {
                    this.tableEmployees.InitVars();
                }
            }
            this.relationFK_Employees_Employees = this.Relations["FK_Employees_Employees"];
        }
        
        private void InitClass() {
            this.DataSetName = "EmployeeDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeeDataSet2.xsd";
            this.EnforceConstraints = true;
            this.tableEmployees = new EmployeesDataTable();
            base.Tables.Add(this.tableEmployees);
            this.relationFK_Employees_Employees = new System.Data.DataRelation("FK_Employees_Employees", new System.Data.DataColumn[] {
                        this.tableEmployees.EmployeeIDColumn}, new System.Data.DataColumn[] {
                        this.tableEmployees.ReportsToColumn}, false);
            this.Relations.Add(this.relationFK_Employees_Employees);
        }
        
        private bool ShouldSerializeEmployees() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            EmployeeDataSet2 ds = new EmployeeDataSet2();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void EmployeesRowChangeEventHandler(object sender, EmployeesRowChangeEvent e);
        
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnEmployeeID;
            
            private System.Data.DataColumn columnLastName;
            
            private System.Data.DataColumn columnFirstName;
            
            private System.Data.DataColumn columnTitle;
            
            private System.Data.DataColumn columnTitleOfCourtesy;
            
            private System.Data.DataColumn columnBirthDate;
            
            private System.Data.DataColumn columnHireDate;
            
            private System.Data.DataColumn columnAddress;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnRegion;
            
            private System.Data.DataColumn columnPostalCode;
            
            private System.Data.DataColumn columnCountry;
            
            private System.Data.DataColumn columnHomePhone;
            
            private System.Data.DataColumn columnExtension;
            
            private System.Data.DataColumn columnPhoto;
            
            private System.Data.DataColumn columnNotes;
            
            private System.Data.DataColumn columnReportsTo;
            
            private System.Data.DataColumn columnPhotoPath;
            
            public EmployeesDataTable() {
                this.TableName = "Employees";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            internal EmployeesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            protected EmployeesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            public System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            public System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            public System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            public System.Data.DataColumn TitleOfCourtesyColumn {
                get {
                    return this.columnTitleOfCourtesy;
                }
            }
            
            public System.Data.DataColumn BirthDateColumn {
                get {
                    return this.columnBirthDate;
                }
            }
            
            public System.Data.DataColumn HireDateColumn {
                get {
                    return this.columnHireDate;
                }
            }
            
            public System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            public System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            public System.Data.DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            public System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            public System.Data.DataColumn HomePhoneColumn {
                get {
                    return this.columnHomePhone;
                }
            }
            
            public System.Data.DataColumn ExtensionColumn {
                get {
                    return this.columnExtension;
                }
            }
            
            public System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            public System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            public System.Data.DataColumn ReportsToColumn {
                get {
                    return this.columnReportsTo;
                }
            }
            
            public System.Data.DataColumn PhotoPathColumn {
                get {
                    return this.columnPhotoPath;
                }
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            public EmployeesRow this[int index] {
                get {
                    return ((EmployeesRow)(this.Rows[index]));
                }
            }
            
            public event EmployeesRowChangeEventHandler EmployeesRowChanged;
            
            public event EmployeesRowChangeEventHandler EmployeesRowChanging;
            
            public event EmployeesRowChangeEventHandler EmployeesRowDeleted;
            
            public event EmployeesRowChangeEventHandler EmployeesRowDeleting;
            
            public void AddEmployeesRow(EmployeesRow row) {
                this.Rows.Add(row);
            }
            
            public EmployeesRow AddEmployeesRow(
                        string LastName, 
                        string FirstName, 
                        string Title, 
                        string TitleOfCourtesy, 
                        System.DateTime BirthDate, 
                        System.DateTime HireDate, 
                        string Address, 
                        string City, 
                        string Region, 
                        string PostalCode, 
                        string Country, 
                        string HomePhone, 
                        string Extension, 
                        byte[] Photo, 
                        string Notes, 
                        EmployeesRow parentEmployeesRowByFK_Employees_Employees, 
                        string PhotoPath) {
                EmployeesRow rowEmployeesRow = ((EmployeesRow)(this.NewRow()));
                rowEmployeesRow.ItemArray = new object[] {
                        null,
                        LastName,
                        FirstName,
                        Title,
                        TitleOfCourtesy,
                        BirthDate,
                        HireDate,
                        Address,
                        City,
                        Region,
                        PostalCode,
                        Country,
                        HomePhone,
                        Extension,
                        Photo,
                        Notes,
                        parentEmployeesRowByFK_Employees_Employees[0],
                        PhotoPath};
                this.Rows.Add(rowEmployeesRow);
                return rowEmployeesRow;
            }
            
            public EmployeesRow FindByEmployeeID(int EmployeeID) {
                return ((EmployeesRow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override System.Data.DataTable Clone() {
                EmployeesDataTable cln = ((EmployeesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override System.Data.DataTable CreateInstance() {
                return new EmployeesDataTable();
            }
            
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnTitle = base.Columns["Title"];
                this.columnTitleOfCourtesy = base.Columns["TitleOfCourtesy"];
                this.columnBirthDate = base.Columns["BirthDate"];
                this.columnHireDate = base.Columns["HireDate"];
                this.columnAddress = base.Columns["Address"];
                this.columnCity = base.Columns["City"];
                this.columnRegion = base.Columns["Region"];
                this.columnPostalCode = base.Columns["PostalCode"];
                this.columnCountry = base.Columns["Country"];
                this.columnHomePhone = base.Columns["HomePhone"];
                this.columnExtension = base.Columns["Extension"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnNotes = base.Columns["Notes"];
                this.columnReportsTo = base.Columns["ReportsTo"];
                this.columnPhotoPath = base.Columns["PhotoPath"];
            }
            
            private void InitClass() {
                this.columnEmployeeID = new System.Data.DataColumn("EmployeeID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnLastName = new System.Data.DataColumn("LastName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new System.Data.DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnTitle = new System.Data.DataColumn("Title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnTitleOfCourtesy = new System.Data.DataColumn("TitleOfCourtesy", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleOfCourtesy);
                this.columnBirthDate = new System.Data.DataColumn("BirthDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDate);
                this.columnHireDate = new System.Data.DataColumn("HireDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHireDate);
                this.columnAddress = new System.Data.DataColumn("Address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnRegion = new System.Data.DataColumn("Region", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnPostalCode = new System.Data.DataColumn("PostalCode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostalCode);
                this.columnCountry = new System.Data.DataColumn("Country", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnHomePhone = new System.Data.DataColumn("HomePhone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomePhone);
                this.columnExtension = new System.Data.DataColumn("Extension", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtension);
                this.columnPhoto = new System.Data.DataColumn("Photo", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnNotes = new System.Data.DataColumn("Notes", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnReportsTo = new System.Data.DataColumn("ReportsTo", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportsTo);
                this.columnPhotoPath = new System.Data.DataColumn("PhotoPath", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoPath);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 20;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 10;
                this.columnTitle.MaxLength = 30;
                this.columnTitleOfCourtesy.MaxLength = 25;
                this.columnAddress.MaxLength = 60;
                this.columnCity.MaxLength = 15;
                this.columnRegion.MaxLength = 15;
                this.columnPostalCode.MaxLength = 10;
                this.columnCountry.MaxLength = 15;
                this.columnHomePhone.MaxLength = 24;
                this.columnExtension.MaxLength = 4;
                this.columnNotes.MaxLength = 1073741823;
                this.columnPhotoPath.MaxLength = 255;
                this.Locale = new System.Globalization.CultureInfo("en-US");
            }
            
            public EmployeesRow NewEmployeesRow() {
                return ((EmployeesRow)(this.NewRow()));
            }
            
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new EmployeesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(EmployeesRow);
            }
            
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeesRowChanged != null)) {
                    this.EmployeesRowChanged(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeesRowChanging != null)) {
                    this.EmployeesRowChanging(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeesRowDeleted != null)) {
                    this.EmployeesRowDeleted(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeesRowDeleting != null)) {
                    this.EmployeesRowDeleting(this, new EmployeesRowChangeEvent(((EmployeesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveEmployeesRow(EmployeesRow row) {
                this.Rows.Remove(row);
            }
            
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EmployeeDataSet2 ds = new EmployeeDataSet2();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        public partial class EmployeesRow : System.Data.DataRow {
            
            private EmployeesDataTable tableEmployees;
            
            internal EmployeesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployees = ((EmployeesDataTable)(this.Table));
            }
            
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableEmployees.EmployeeIDColumn]));
                }
                set {
                    this[this.tableEmployees.EmployeeIDColumn] = value;
                }
            }
            
            public string LastName {
                get {
                    return ((string)(this[this.tableEmployees.LastNameColumn]));
                }
                set {
                    this[this.tableEmployees.LastNameColumn] = value;
                }
            }
            
            public string FirstName {
                get {
                    return ((string)(this[this.tableEmployees.FirstNameColumn]));
                }
                set {
                    this[this.tableEmployees.FirstNameColumn] = value;
                }
            }
            
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.TitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Title\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.TitleColumn] = value;
                }
            }
            
            public string TitleOfCourtesy {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.TitleOfCourtesyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TitleOfCourtesy\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.TitleOfCourtesyColumn] = value;
                }
            }
            
            public System.DateTime BirthDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEmployees.BirthDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BirthDate\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.BirthDateColumn] = value;
                }
            }
            
            public System.DateTime HireDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableEmployees.HireDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HireDate\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.HireDateColumn] = value;
                }
            }
            
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.AddressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Address\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.AddressColumn] = value;
                }
            }
            
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.CityColumn] = value;
                }
            }
            
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.RegionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Region\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.RegionColumn] = value;
                }
            }
            
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.PostalCodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PostalCode\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.PostalCodeColumn] = value;
                }
            }
            
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.CountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Country\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.CountryColumn] = value;
                }
            }
            
            public string HomePhone {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.HomePhoneColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HomePhone\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.HomePhoneColumn] = value;
                }
            }
            
            public string Extension {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.ExtensionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Extension\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.ExtensionColumn] = value;
                }
            }
            
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableEmployees.PhotoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Photo\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.PhotoColumn] = value;
                }
            }
            
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.NotesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Notes\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.NotesColumn] = value;
                }
            }
            
            public int ReportsTo {
                get {
                    try {
                        return ((int)(this[this.tableEmployees.ReportsToColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ReportsTo\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.ReportsToColumn] = value;
                }
            }
            
            public string PhotoPath {
                get {
                    try {
                        return ((string)(this[this.tableEmployees.PhotoPathColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PhotoPath\' in table \'Employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployees.PhotoPathColumn] = value;
                }
            }
            
            public EmployeesRow EmployeesRowParent {
                get {
                    return ((EmployeesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Employees_Employees"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Employees_Employees"]);
                }
            }
            
            public bool IsTitleNull() {
                return this.IsNull(this.tableEmployees.TitleColumn);
            }
            
            public void SetTitleNull() {
                this[this.tableEmployees.TitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsTitleOfCourtesyNull() {
                return this.IsNull(this.tableEmployees.TitleOfCourtesyColumn);
            }
            
            public void SetTitleOfCourtesyNull() {
                this[this.tableEmployees.TitleOfCourtesyColumn] = System.Convert.DBNull;
            }
            
            public bool IsBirthDateNull() {
                return this.IsNull(this.tableEmployees.BirthDateColumn);
            }
            
            public void SetBirthDateNull() {
                this[this.tableEmployees.BirthDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsHireDateNull() {
                return this.IsNull(this.tableEmployees.HireDateColumn);
            }
            
            public void SetHireDateNull() {
                this[this.tableEmployees.HireDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsAddressNull() {
                return this.IsNull(this.tableEmployees.AddressColumn);
            }
            
            public void SetAddressNull() {
                this[this.tableEmployees.AddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsCityNull() {
                return this.IsNull(this.tableEmployees.CityColumn);
            }
            
            public void SetCityNull() {
                this[this.tableEmployees.CityColumn] = System.Convert.DBNull;
            }
            
            public bool IsRegionNull() {
                return this.IsNull(this.tableEmployees.RegionColumn);
            }
            
            public void SetRegionNull() {
                this[this.tableEmployees.RegionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tableEmployees.PostalCodeColumn);
            }
            
            public void SetPostalCodeNull() {
                this[this.tableEmployees.PostalCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCountryNull() {
                return this.IsNull(this.tableEmployees.CountryColumn);
            }
            
            public void SetCountryNull() {
                this[this.tableEmployees.CountryColumn] = System.Convert.DBNull;
            }
            
            public bool IsHomePhoneNull() {
                return this.IsNull(this.tableEmployees.HomePhoneColumn);
            }
            
            public void SetHomePhoneNull() {
                this[this.tableEmployees.HomePhoneColumn] = System.Convert.DBNull;
            }
            
            public bool IsExtensionNull() {
                return this.IsNull(this.tableEmployees.ExtensionColumn);
            }
            
            public void SetExtensionNull() {
                this[this.tableEmployees.ExtensionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhotoNull() {
                return this.IsNull(this.tableEmployees.PhotoColumn);
            }
            
            public void SetPhotoNull() {
                this[this.tableEmployees.PhotoColumn] = System.Convert.DBNull;
            }
            
            public bool IsNotesNull() {
                return this.IsNull(this.tableEmployees.NotesColumn);
            }
            
            public void SetNotesNull() {
                this[this.tableEmployees.NotesColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportsToNull() {
                return this.IsNull(this.tableEmployees.ReportsToColumn);
            }
            
            public void SetReportsToNull() {
                this[this.tableEmployees.ReportsToColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhotoPathNull() {
                return this.IsNull(this.tableEmployees.PhotoPathColumn);
            }
            
            public void SetPhotoPathNull() {
                this[this.tableEmployees.PhotoPathColumn] = System.Convert.DBNull;
            }
            
            public EmployeesRow[] GetEmployeesRows() {
                return ((EmployeesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Employees_Employees"])));
            }
        }
        
        public class EmployeesRowChangeEvent : System.EventArgs {
            
            private EmployeesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            public EmployeesRowChangeEvent(EmployeesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public EmployeesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Toys.Test.EmployeeDataSet2TableAdapters {
    
    
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmployeesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter m_adapter;
        
        private System.Data.OleDb.OleDbConnection m_connection;
        
        private System.Data.OleDb.OleDbCommand[] m_commandCollection;
        
        private bool m_clearBeforeFill;
        
        public EmployeesTableAdapter() {
            this.m_clearBeforeFill = true;
        }
        
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this.m_adapter == null)) {
                    this.InitAdapter();
                }
                return this.m_adapter;
            }
        }
        
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this.m_connection == null)) {
                    this.InitConnection();
                }
                return this.m_connection;
            }
            set {
                this.m_connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this.m_commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this.m_commandCollection;
            }
        }
        
        public bool ClearBeforeFill {
            get {
                return this.m_clearBeforeFill;
            }
            set {
                this.m_clearBeforeFill = value;
            }
        }
        
        private void InitAdapter() {
            this.m_adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Employees";
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("TitleOfCourtesy", "TitleOfCourtesy");
            tableMapping.ColumnMappings.Add("BirthDate", "BirthDate");
            tableMapping.ColumnMappings.Add("HireDate", "HireDate");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("PostalCode", "PostalCode");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("HomePhone", "HomePhone");
            tableMapping.ColumnMappings.Add("Extension", "Extension");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("ReportsTo", "ReportsTo");
            tableMapping.ColumnMappings.Add("PhotoPath", "PhotoPath");
            this.m_adapter.TableMappings.Add(tableMapping);
            this.m_adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this.m_adapter.DeleteCommand.Connection = this.Connection;
            this.m_adapter.DeleteCommand.CommandText = @"DELETE FROM [Northwind].[dbo].[Employees] WHERE (([EmployeeID] = ?) AND ([LastName] = ?) AND ([FirstName] = ?) AND ((? = 1 AND [Title] IS NULL) OR ([Title] = ?)) AND ((? = 1 AND [TitleOfCourtesy] IS NULL) OR ([TitleOfCourtesy] = ?)) AND ((? = 1 AND [BirthDate] IS NULL) OR ([BirthDate] = ?)) AND ((? = 1 AND [HireDate] IS NULL) OR ([HireDate] = ?)) AND ((? = 1 AND [Address] IS NULL) OR ([Address] = ?)) AND ((? = 1 AND [City] IS NULL) OR ([City] = ?)) AND ((? = 1 AND [Region] IS NULL) OR ([Region] = ?)) AND ((? = 1 AND [PostalCode] IS NULL) OR ([PostalCode] = ?)) AND ((? = 1 AND [Country] IS NULL) OR ([Country] = ?)) AND ((? = 1 AND [HomePhone] IS NULL) OR ([HomePhone] = ?)) AND ((? = 1 AND [Extension] IS NULL) OR ([Extension] = ?)) AND ((? = 1 AND [ReportsTo] IS NULL) OR ([ReportsTo] = ?)) AND ((? = 1 AND [PhotoPath] IS NULL) OR ([PhotoPath] = ?)))";
            this.m_adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p1", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EmployeeID", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p2", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p3", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p4", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p5", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p6", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p7", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p8", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p9", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p10", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p11", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p12", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p13", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p14", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p15", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p16", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p17", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p18", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p19", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p20", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p21", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p22", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p23", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p24", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p25", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p26", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p27", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p28", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p29", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this.m_adapter.InsertCommand.Connection = this.Connection;
            this.m_adapter.InsertCommand.CommandText = @"INSERT INTO [Northwind].[dbo].[Employees] ([LastName], [FirstName], [Title], [TitleOfCourtesy], [BirthDate], [HireDate], [Address], [City], [Region], [PostalCode], [Country], [HomePhone], [Extension], [Photo], [Notes], [ReportsTo], [PhotoPath]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this.m_adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p1", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p2", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p3", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p4", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p5", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p6", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p7", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p8", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p9", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p10", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p11", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p12", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p13", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p14", System.Data.OleDb.OleDbType.LongVarBinary, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Photo", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p15", System.Data.OleDb.OleDbType.LongVarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Notes", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p16", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p17", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this.m_adapter.UpdateCommand.Connection = this.Connection;
            this.m_adapter.UpdateCommand.CommandText = @"UPDATE [Northwind].[dbo].[Employees] SET [LastName] = ?, [FirstName] = ?, [Title] = ?, [TitleOfCourtesy] = ?, [BirthDate] = ?, [HireDate] = ?, [Address] = ?, [City] = ?, [Region] = ?, [PostalCode] = ?, [Country] = ?, [HomePhone] = ?, [Extension] = ?, [Photo] = ?, [Notes] = ?, [ReportsTo] = ?, [PhotoPath] = ? WHERE (([EmployeeID] = ?) AND ([LastName] = ?) AND ([FirstName] = ?) AND ((? = 1 AND [Title] IS NULL) OR ([Title] = ?)) AND ((? = 1 AND [TitleOfCourtesy] IS NULL) OR ([TitleOfCourtesy] = ?)) AND ((? = 1 AND [BirthDate] IS NULL) OR ([BirthDate] = ?)) AND ((? = 1 AND [HireDate] IS NULL) OR ([HireDate] = ?)) AND ((? = 1 AND [Address] IS NULL) OR ([Address] = ?)) AND ((? = 1 AND [City] IS NULL) OR ([City] = ?)) AND ((? = 1 AND [Region] IS NULL) OR ([Region] = ?)) AND ((? = 1 AND [PostalCode] IS NULL) OR ([PostalCode] = ?)) AND ((? = 1 AND [Country] IS NULL) OR ([Country] = ?)) AND ((? = 1 AND [HomePhone] IS NULL) OR ([HomePhone] = ?)) AND ((? = 1 AND [Extension] IS NULL) OR ([Extension] = ?)) AND ((? = 1 AND [ReportsTo] IS NULL) OR ([ReportsTo] = ?)) AND ((? = 1 AND [PhotoPath] IS NULL) OR ([PhotoPath] = ?)))";
            this.m_adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p1", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p2", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p3", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p4", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p5", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p6", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p7", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p8", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p9", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p10", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p11", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p12", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p13", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p14", System.Data.OleDb.OleDbType.LongVarBinary, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Photo", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p15", System.Data.OleDb.OleDbType.LongVarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Notes", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p16", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p17", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Current, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p18", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EmployeeID", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p19", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastName", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p20", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FirstName", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p21", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p22", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Title", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p23", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p24", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TitleOfCourtesy", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p25", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p26", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BirthDate", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p27", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p28", System.Data.OleDb.OleDbType.DBTimeStamp, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HireDate", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p29", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p30", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Address", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p31", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p32", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p33", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p34", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Region", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p35", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p36", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PostalCode", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p37", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p38", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Country", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p39", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p40", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HomePhone", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p41", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p42", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Extension", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p43", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p44", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ReportsTo", System.Data.DataRowVersion.Original, false, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p45", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Original, true, null));
            this.m_adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("p46", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PhotoPath", System.Data.DataRowVersion.Original, false, null));
        }
        
        private void InitConnection() {
            this.m_connection = new System.Data.OleDb.OleDbConnection();
            this.m_connection.ConnectionString = Toys.Test.Properties.Settings.Default.ConnectionString;
        }
        
        private void InitCommandCollection() {
            this.m_commandCollection = new System.Data.OleDb.OleDbCommand[1];
            this.m_commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this.m_commandCollection[0].Connection = this.Connection;
            this.m_commandCollection[0].CommandText = "SELECT EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDa" +
                "te, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Not" +
                "es, ReportsTo, PhotoPath FROM dbo.Employees";
            this.m_commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EmployeeDataSet2.EmployeesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.m_clearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EmployeeDataSet2.EmployeesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            EmployeeDataSet2.EmployeesDataTable dataTable = new EmployeeDataSet2.EmployeesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        public virtual int Update(EmployeeDataSet2.EmployeesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        public virtual int Update(EmployeeDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "Employees");
        }
        
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int p1, 
                    string p2, 
                    string p3, 
                    string p5, 
                    string p7, 
                    System.Nullable<System.DateTime> p9, 
                    System.Nullable<System.DateTime> p11, 
                    string p13, 
                    string p15, 
                    string p17, 
                    string p19, 
                    string p21, 
                    string p23, 
                    string p25, 
                    System.Nullable<int> p27, 
                    string p29) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            if ((p2 == null)) {
                throw new System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                throw new System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p5 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p7 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(p9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((p13 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(p13));
            }
            if ((p15 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p17 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(p17));
            }
            if ((p19 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p21 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(p21));
            }
            if ((p23 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(p23));
            }
            if ((p25 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(p25));
            }
            if ((p27.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(p27.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((p29 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(p29));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            this.Adapter.DeleteCommand.Connection.Open();
            try {
                return this.Adapter.DeleteCommand.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string p1, 
                    string p2, 
                    string p3, 
                    string p4, 
                    System.Nullable<System.DateTime> p5, 
                    System.Nullable<System.DateTime> p6, 
                    string p7, 
                    string p8, 
                    string p9, 
                    string p10, 
                    string p11, 
                    string p12, 
                    string p13, 
                    byte[] p14, 
                    string p15, 
                    System.Nullable<int> p16, 
                    string p17) {
            if ((p1 == null)) {
                throw new System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                throw new System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(p13));
            }
            if ((p14 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((byte[])(p14));
            }
            if ((p15 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((p17 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(p17));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            this.Adapter.InsertCommand.Connection.Open();
            try {
                return this.Adapter.InsertCommand.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string p1, 
                    string p2, 
                    string p3, 
                    string p4, 
                    System.Nullable<System.DateTime> p5, 
                    System.Nullable<System.DateTime> p6, 
                    string p7, 
                    string p8, 
                    string p9, 
                    string p10, 
                    string p11, 
                    string p12, 
                    string p13, 
                    byte[] p14, 
                    string p15, 
                    System.Nullable<int> p16, 
                    string p17, 
                    int p18, 
                    string p19, 
                    string p20, 
                    string p22, 
                    string p24, 
                    System.Nullable<System.DateTime> p26, 
                    System.Nullable<System.DateTime> p28, 
                    string p30, 
                    string p32, 
                    string p34, 
                    string p36, 
                    string p38, 
                    string p40, 
                    string p42, 
                    System.Nullable<int> p44, 
                    string p46) {
            if ((p1 == null)) {
                throw new System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                throw new System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(p13));
            }
            if ((p14 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((byte[])(p14));
            }
            if ((p15 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((p17 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(p17));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(p18));
            if ((p19 == null)) {
                throw new System.ArgumentNullException("p19");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p20 == null)) {
                throw new System.ArgumentNullException("p20");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(p20));
            }
            if ((p22 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(p22));
            }
            if ((p24 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p26.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(p26.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((p28.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(p28.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((p30 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(p30));
            }
            if ((p32 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(p32));
            }
            if ((p34 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(p34));
            }
            if ((p36 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(p36));
            }
            if ((p38 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(p38));
            }
            if ((p40 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(p40));
            }
            if ((p42 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(p42));
            }
            if ((p44.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(p44.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((p46 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(p46));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            this.Adapter.UpdateCommand.Connection.Open();
            try {
                return this.Adapter.UpdateCommand.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}
