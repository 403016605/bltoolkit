|            | CharIndex   | s.IndexOf(a)                    | CASE WHEN <b>Length</b>(a) = 0 THEN 0 ELSE <b>CharIndex</b>(a, s) - 1 END
|            | CharIndex   | s.IndexOf(a, b)                 | CASE WHEN <b>Length</b>(a) = 0 AND <b>Length</b>(s) > b + 1 THEN b ELSE <b>CharIndex</b>(a, s, b + 1) - 1 END
|            | LastIndexOf | s.LastIndexOf(a)                | Length(s) - (Length(a) + CharIndex(Reverse(a), Reverse(s)) + 1 -- <i>all used functions must be implemented by provider</i>

| DB2        | Length      | s.Length                        | Length(s)
| DB2        | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| DB2        | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| DB2        | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| DB2        | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| DB2        | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| DB2        | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| DB2        | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| DB2        | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| DB2        | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| DB2        | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~'
| DB2        | CharIndex   | s.IndexOf(a, b, c)              | Locate(<br>&nbsp;a,<br>&nbsp;Substr(s, 1, b+c),<br>&nbsp;b+1) - 1
| DB2        | CharIndex   | s.CharIndex(a)                  | Locate(a, s)
| DB2        | CharIndex   | s.CharIndex(a, b)               | Locate(a, s, b)
| DB2        | Substring   | s.Substring(a)                  | Substr(s, a+1, Length(s)-a)
| DB2        | Substring   | s.Substring(a, b)               | Substr(s, a+1, b)

| Informix   | Length      | s.Length                        | Length(s)
| Informix   | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| Informix   | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%"
| Informix   | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str
| Informix   | LIKE        | !s.Contains(a)                  | NOT s LIKE a
| Informix   | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| Informix   | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| Informix   | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| Informix   | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| Informix   | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| Informix   | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| Informix   | Substring   | s.Substring(a)                  | Substr(s, a+1, Length(s)-a)
| Informix   | Substring   | s.Substring(a, b)               | Substr(s, a+1, b)

| Oracle     | Length      | s.Length                        | Length(s)
| Oracle     | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| Oracle     | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| Oracle     | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| Oracle     | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| Oracle     | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| Oracle     | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| Oracle     | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| Oracle     | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| Oracle     | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| Oracle     | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| Oracle     | CharIndex   | s.IndexOf(a, b, c)              | InStr(<br>&nbsp;Substr(s, 1, b+c), <br>&nbsp;a, <br>&nbsp;b+1) - 1
| Oracle     | CharIndex   | s.CharIndex(a)                  | InStr(s, a)
| Oracle     | CharIndex   | s.CharIndex(a, b)               | InStr(s, a, b)
| Oracle     | Substring   | s.Substring(a)                  | Substr(s, a+1, Length(s)-a)
| Oracle     | Substring   | s.Substring(a, b)               | Substr(s, a+1, b)
| Oracle     | Reverse     | s.Reverse(a)                    | Reverse(s)

| Firebird   | Length      | s.Length                        | Char_Length(s)
| Firebird   | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| Firebird   | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| Firebird   | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| Firebird   | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| Firebird   | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| Firebird   | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| Firebird   | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| Firebird   | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| Firebird   | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| Firebird   | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| Firebird   | Substring   | s.Substring(a)                  | Substring(s from  a+1<br>&nbsp;&nbsp;for CHAR_Length(s)-a)
| Firebird   | Substring   | s.Substring(a, b)               | Substring(s from  a+1<br>&nbsp;&nbsp;for b)
| Firebird   | Reverse     | s.Reverse(a)                    | Reverse(s)

| PostgreSQL | Length      | s.Length                        | Length(s)
| PostgreSQL | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| PostgreSQL | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| PostgreSQL | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| PostgreSQL | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| PostgreSQL | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| PostgreSQL | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| PostgreSQL | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| PostgreSQL | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| PostgreSQL | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| PostgreSQL | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| PostgreSQL | CharIndex   | s.IndexOf(a, b, c)              | Position(a in Substring(<br>&nbsp;Substring(s, 1, b+c), b+1,<br>&nbsp;&nbsp;Length(Substring(s, 1, b+c))<br>&nbsp;- (b+1)))
| PostgreSQL | CharIndex   | s.CharIndex(a)                  | Position(a in s)
| PostgreSQL | CharIndex   | s.CharIndex(a, b)               | Position(a in Substring(s, b, <br>&nbsp;&nbsp;Length(s)-b)) + b-1
| PostgreSQL | Substring   | s.Substring(a)                  | Substring(s, a+1, Length(s)-a)
| PostgreSQL | Substring   | s.Substring(a, b)               | Substring(s, a+1, b)
| PostgreSQL | Reverse     | s.Reverse(a)                    | Reverse(s) -- <i>implemented as UDF<i>

| MySql      | Length      | s.Length                        | Length(s)
| MySql      | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| MySql      | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| MySql      | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| MySql      | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| MySql      | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| MySql      | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| MySql      | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| MySql      | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| MySql      | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| MySql      | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| MySql      | CharIndex   | s.IndexOf(a, b, c)              | Locate(a,<br>&nbsp;Substring(s, 1, b+c),<br>&nbsp;b+1) - 1
| MySql      | CharIndex   | s.CharIndex(a)                  | Locate(a, s)
| MySql      | CharIndex   | s.CharIndex(a, b)               | Locate(a, s, b)
| MySql      | Substring   | s.Substring(a)                  | Substring(s, a+1, Length(s)-a)
| MySql      | Substring   | s.Substring(a, b)               | Substring(s, a+1, b)
| MySql      | Reverse     | s.Reverse(a)                    | Reverse(s)

| MS SQL     | Length      | s.Length                        | Len(s)
| MS SQL     | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| MS SQL     | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| MS SQL     | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| MS SQL     | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| MS SQL     | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| MS SQL     | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| MS SQL     | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| MS SQL     | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| MS SQL     | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| MS SQL     | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| MS SQL     | CharIndex   | s.IndexOf(a, b, c)              | CharIndex(a,<br>&nbsp;Substring(s, 1, b+c),<br>&nbsp;b+1) - 1
| MS SQL     | CharIndex   | s.CharIndex(a)                  | CharIndex(a, s)
| MS SQL     | CharIndex   | s.CharIndex(a, b)               | CharIndex(a, s, b)
| MS SQL     | Substring   | s.Substring(a)                  | Substring(s, a+1, Len(s)-a)
| MS SQL     | Substring   | s.Substring(a, b)               | Substring(s, a+1, b)
| MS SQL     | Reverse     | s.Reverse(a)                    | Reverse(s)

| SqlCe      | Length      | s.Length                        | Len(s)
| SqlCe      | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| SqlCe      | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| SqlCe      | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| SqlCe      | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| SqlCe      | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| SqlCe      | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| SqlCe      | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| SqlCe      | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| SqlCe      | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| SqlCe      | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| SqlCe      | CharIndex   | s.IndexOf(a, b, c)              | CharIndex(a,<br>&nbsp;Substring(s, 1, b+c),<br>&nbsp;b+1) - 1
| SqlCe      | CharIndex   | s.CharIndex(a)                  | CharIndex(a, s)
| SqlCe      | CharIndex   | s.CharIndex(a, b)               | CharIndex(a, s, b)
| SqlCe      | Substring   | s.Substring(a)                  | Substring(s, a+1, Len(s)-a)
| SqlCe      | Substring   | s.Substring(a, b)               | Substring(s, a+1, b)

| Sybase     | Length      | s.Length                        | Len(s)
| Sybase     | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| Sybase     | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| Sybase     | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| Sybase     | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| Sybase     | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| Sybase     | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| Sybase     | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| Sybase     | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b" 
| Sybase     | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| Sybase     | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~' 
| Sybase     | CharIndex   | s.IndexOf(a, b, c)              | CharIndex(a, Substring(<br>&nbsp;Substring(s, 1, b+c),<br>&nbsp;b + 1,<br>&nbsp;Len(Substring(s, 1, b+c)) - (b+1)))
| Sybase     | CharIndex   | s.CharIndex(a)                  | CharIndex(a, s)
| Sybase     | CharIndex   | s.CharIndex(a, b)               | CharIndex(a,Substring(<br>&nbsp;&nbsp;s, b, Len(s)-b)) + b - 1
| Sybase     | Substring   | s.Substring(a)                  | Substring(s, a+1, Len(s)-a)
| Sybase     | Substring   | s.Substring(a, b)               | Substring(s, a+1, b)
| Sybase     | Reverse     | s.Reverse(a)                    | Reverse(s)

| SQLite     | Length      | s.Length                        | Length(s)
| SQLite     | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| SQLite     | LIKE        | s.Contains("a%b")               | s LIKE '%a~%b%' ESCAPE '~' s LIKE "%a[%]b%" 
| SQLite     | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str 
| SQLite     | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| SQLite     | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%' 
| SQLite     | LIKE        | s.EndsWith("abc")               | s LIKE '%abc' 
| SQLite     | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%' 
| SQLite     | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a~%b" ESCAPE '~' s LIKE "a[%]b"
| SQLite     | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%' 
| SQLite     | LIKE        | s.Like("a~%b", '~')             | s LIKE "a~%b" ESCAPE '~'
| SQLite     | CharIndex   | s.IndexOf(a, b, c)              | CharIndex(a,<br>&nbsp;Substr(s, 1, b+c),<br>&nbsp;b + 1) - 1
| SQLite     | CharIndex   | s.CharIndex(a)                  | CharIndex(a, s)
| SQLite     | CharIndex   | s.CharIndex(a, b)               | CharIndex(a, s, b)
| SQLite     | Substring   | s.Substring(a)                  | Substr(s, a+1,<br>&nbsp;&nbsp;Length(s) - a)
| SQLite     | Substring   | s.Substring(a, b)               | Substr(s, a+1, b)
| SQLite     | Reverse     | s.Reverse(a)                    | Reverse(s)

| Access     | Length      | s.Length                        | Len(s)
| Access     | LIKE        | s.Contains("abc")               | s LIKE '%abc%'
| Access     | LIKE        | s.Contains("a%b")               | s LIKE "%a[%]b%"
| Access     | LIKE        | s.Contains(str)                 | s LIKE @str ESCAPE '~' s LIKE @str
| Access     | LIKE        | !s.Contains(a)                  | s NOT LIKE a
| Access     | LIKE        | s.StartsWith("abc")             | s LIKE 'abc%'
| Access     | LIKE        | s.EndsWith("abc")               | s LIKE '%abc'
| Access     | LIKE        | SqlMethods.Like(s, "%abc%")     | s LIKE '%abc%'
| Access     | LIKE        | SqlMethods.Like(s, "a~%b", '~') | s LIKE "a[%]b"
| Access     | LIKE        | s.Like("%abc%")                 | s LIKE '%abc%'
| Access     | LIKE        | s.Like("a~%b", '~')             | s LIKE "a[%]b"
| Access     | CharIndex   | s.IndexOf(a, b, c)              | InStr(b+1,<br>&nbsp;Mid(s, 1, b+c),<br>&nbsp;a, 1) - 1
| Access     | CharIndex   | s.CharIndex(a)                  | InStr(1, s, a, 1)
| Access     | CharIndex   | s.CharIndex(a, b)               | InStr(b, s, a, 1)
| Access     | Substring   | s.Substring(a)                  | Mid(s, a+1, Len(s)-a)
| Access     | Substring   | s.Substring(a, b)               | Mid(s, a+1, b)

